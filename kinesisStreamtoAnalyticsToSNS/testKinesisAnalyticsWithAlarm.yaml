AWSTemplateFormatVersion: "2010-09-09"
Description: log (stack) -> kinesis stream (stack) -> kinesis analytics -> kinesis stream ->

Parameters:
  Env:
    Description: "specify an env"
    Type: String
  KinesisStreamStack:
    Description: "specify the stack of the kinesis stream"
    Type: String

Resources:
  TestKinesisAnalyticsApplication:
    Type: AWS::KinesisAnalytics::Application
    Properties:
      ApplicationCode: >
        "CREATE OR REPLACE STREAM "ALARM_STREAM" (order_count INTEGER);

        CREATE OR REPLACE PUMP "STREAM_PUMP" AS 
            INSERT INTO "ALARM_STREAM"
                SELECT STREAM order_count
                FROM (
                    SELECT STREAM COUNT(*) OVER TEN_SECOND_SLIDING_WINDOW AS order_count
                    FROM "SOURCE_SQL_STREAM_001"
                    WINDOW TEN_SECOND_SLIDING_WINDOW AS (RANGE INTERVAL '10' SECOND PRECEDING)
                )
                WHERE order_count >= 10;

        CREATE OR REPLACE STREAM TRIGGER_COUNT_STREAM(
            order_count INTEGER,
            trigger_count INTEGER);
            
        CREATE OR REPLACE PUMP trigger_count_pump AS INSERT INTO TRIGGER_COUNT_STREAM
        SELECT STREAM order_count, trigger_count
        FROM (
            SELECT STREAM order_count, COUNT(*) OVER W1 as trigger_count
            FROM "ALARM_STREAM"
            WINDOW W1 AS (RANGE INTERVAL '1' MINUTE PRECEDING)
        )
        WHERE trigger_count >= 1;"
      # ApplicationDescription: String
      ApplicationName: TransactionRateMonitor
      Inputs:
        - NamePrefix: "SOURCE_SQL_STREAM"
          InputSchema:
            RecordColumns:
              - Name: "InvoiceNo"
                SqlType: "INTEGER"
              - Name: "StockCode"
                SqlType: "INTEGER"
              - Name: "Description"
                SqlType: "VARCHAR(16)"
              - Name: "Quantity"
                SqlType: "INTEGER"
              - Name: "InvoiceDate"
                SqlType: "VARCHAR(16)"
              - Name: "UnitPrice"
                SqlType: "REAL"
              - Name: "Customer"
                SqlType: "INTEGER"
              - Name: "Country"
                SqlType: "VARCHAR(16)"

            RecordFormat:
              RecordFormatType: "CSV"
              MappingParameters:
                CSVMappingParameters:
                  RecordColumnDelimiter: ","
                  RecordRowDelimiter: "\n"
          KinesisStreamsInput:
            ResourceARN:
              Fn::ImportValue: !Sub "${KinesisStreamStack}-TestKinesisStream-ARN-${Env}"
            RoleARN: !GetAtt KinesisAnalyticsRole.Arn

  TestKinesisAnalyticsApplicationOutputs:
    Type: AWS::KinesisAnalytics::ApplicationOutput
    DependsOn: TestKinesisAnalyticsApplication
    Properties:
      ApplicationName: !Ref TestKinesisAnalyticsApplication
      Output:
        Name: "exampleOutput"
        DestinationSchema:
          RecordFormatType: "JSON"
        KinesisStreamsOutput:
          ResourceARN: !GetAtt OutputKinesisStream.Arn
          RoleARN: !GetAtt KinesisAnalyticsRole.Arn

  OutputKinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 1

  KinesisAnalyticsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: kinesisanalytics.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: Open
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
